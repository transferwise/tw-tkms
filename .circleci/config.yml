version: 2

references:
  container_config: &container_config
    docker:
      - image: arti.tw.ee/circle_openjdk8:latest
        user: circleci
    resource_class: small
    environment:
      TERM: vt100
      GRADLE_OPTS: '-Dorg.gradle.console=plain'
  working_directory: &working_directory
    working_directory: ~/tw-tkms

jobs:
  build:
    <<: *working_directory
    resource_class: medium+
    environment:
      IN_CIRCLE: true
      MARIADB_TCP_3306: 3306
      POSTGRES_TCP_5432: 5432
      KAFKA_TCP_9092: 9092
      ZOOKEEPER_TCP_2181: 2181
    docker:
      - image: arti.tw.ee/circle_openjdk13
        user: circleci
        environment:
          TERM: vt100
      - image: mariadb:10.3
        command: ['--ssl=0',
                  '--character-set-server=utf8mb4',
                  '--innodb_flush_log_at_trx_commit=0',
                  '--innodb_flush_method=O_DIRECT_NO_FSYNC',
                  '--innodb_flush_neighbors=0',
                  '--character-set-server=utf8mb4',
                  '--collation-server=utf8mb4_unicode_ci',
                  '--transaction-isolation=READ-COMMITTED',
                  '--innodb_autoinc_lock_mode=2']
        environment:
          MYSQL_DATABASE: tkms
          MYSQL_ROOT_PASSWORD: example-password-change-me
      - image: postgres:12
        environment:
          POSTGRES_PASSWORD: example-password-change-me
      - image: bitnami/zookeeper:3.5.5
        environment:
          ZOO_MY_ID: 1
          ALLOW_ANONYMOUS_LOGIN: "yes"
      # Separate Zookeeper for Kafka
      - image: bitnami/zookeeper:3.4.14
        name: zk1
        environment:
          ALLOW_ANONYMOUS_LOGIN: "yes"
      - image: wurstmeister/kafka:2.12-2.5.0
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zk1:2181
          KAFKA_LISTENERS: PLAINTEXT://:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_MESSAGE_MAX_BYTES: "10485760"
          KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 20000
          KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
          KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: 5
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      - image: mongo:4.2.8
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
          MONGO_INITDB_DATABASE: tkms
          MONGO_REPLICA_SET_NAME: rs01
        ports:
          - "27017:27017"
        command: [ "mongod", "--replSet", "rs01", "--bind_ip_all"]
    steps:
      - checkout
      - restore_cache:
          key: tw-tkms-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Assemble jar
          command: ./gradlew assemble --refresh-dependencies --console=plain --no-daemon
      - run:
          name: Configure Mongo as a standalone replicaSet
          command: >
            sudo apt-get install -y mongodb &&
            mongo admin -u root -p example --host localhost:27017 --eval "rs.initiate( {_id : 'rs01',members: [{ _id: 0, host: '127.0.0.1:27017', priority: 1.0}]})"
      - run:
          name: Wait 5 seconds for Mongo to become Master
          command: sleep 5
      - run:
          name: Check Mongo status
          command: >
            mongo admin -u root -p example --host localhost:27017 --eval "rs.status()"
      - run:
          name: Run tests
          command: ./gradlew check --console=plain --no-daemon --stacktrace
      - save_cache:
          paths:
            - ~/.gradle/
          key: tw-tkms-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Gather starter test results
          shell: /bin/bash
          command: |
            pushd tw-tkms-starter/build/reports/tests/test && zip -r ~/junit_starter_html.zip * && popd || true
          when: always
      - store_test_results:
          path: ./tw-tkms-starter/build/test-results/
      - store_artifacts:
          path: ~/junit_starter_html.zip
          when: always
      - persist_to_workspace:
          root: .
          paths:
            - '*'
  artifacts-publish:
    <<: *working_directory
    <<: *container_config
    steps:
      - attach_workspace:
          at: ~/tw-tkms
      - restore_cache:
          key: tw-tkms-gradle-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Set git config
          command: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.name "TransferWise CircleCI" && git config --global user.email circle@circle.tw.ee
      - run:
          name: Publish artifacts
          command: |
            if ./.circleci/version-changed.sh tw-tkms-starter ; then
              ./gradlew pushTag publish --no-daemon --console=plain
            fi

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build
      - artifacts-publish:
          context: artifactory-deploy
          requires:
            - build
          filters:
            branches:
              only:
                - master
