spring:
  application:
    name: tw-tkms-test
  datasource:
    url: "jdbc:mariadb://${MARIADB_TCP_HOST:localhost}:${MARIADB_TCP_3306}/tkms"
    password: "example-password-change-me"
    username: "root"
    hikari:
      validation-timeout: 5000
      maximum-pool-size: 50
      minimum-idle: 0
      transaction-isolation: 2

  kafka:
    bootstrap-servers: "${KAFKA_TCP_HOST:localhost}:${KAFKA_TCP_9092}"
    consumer:
      group-id: ${spring.application.name}
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    listener:
      missing-topics-fatal: false

  flyway:
    locations: "classpath:db/migration/mysql"

tw-curator:
  zookeeper-connect-string: "${ZOOKEEPER_TCP_HOST:localhost}:${ZOOKEEPER_TCP_2181}"

tw-tkms:
  polling-interval: 5ms
  shards-count: 2
  insert-batch-size: 2
  kafka:
    bootstrap.servers: "${KAFKA_TCP_HOST:localhost}:${KAFKA_TCP_9092}"
  shards:
    1:
      polling-interval: 6ms
      kafka:
        linger:
          ms: 7
      earliest-visible-messages:
        enabled: true
  debug-enabled: true
  compression:
    algorithm: random
    min-size: 10
  environment:
    previous-version: 0.7.3
  monitoring:
    start-delay: 0s
  internals:
    assertion-level: 1

tw-graceful-shutdown:
  clients-reaction-time-ms: 1000
  strategies-check-interval-time-ms: 1000

logging.level:
  org.apache.kafka.clients: WARN

tw-tkms-test:
  test-topic: TestTopic
---

spring:
  application.name: tw-tkms-test-postgres
  datasource:
    url: "jdbc:postgresql://${POSTGRES_TCP_HOST:localhost}:${POSTGRES_TCP_5432}/postgres"
    username: "postgres"
  flyway:
    locations: "classpath:db/migration/postgres"
  config:
    activate:
      on-profile: postgres
  
tw-tkms:
  database-dialect: POSTGRES
  delete-batch-sizes: "51, 11, 5, 1"

tw-tkms-test:
  test-topic: TestTopicPostgres

---

spring:
  application.name: tw-tkms-earliest-message
  datasource:
    url: "jdbc:postgresql://${POSTGRES_TCP_HOST:localhost}:${POSTGRES_TCP_5432}/postgres"
    username: "postgres"
  flyway:
    locations: "classpath:db/migration/earliestmessage"
    default-schema: "earliestmessage"
    schemas:
      - "earliestmessage"
  config:
    activate:
      on-profile: earliest-message

tw-tkms:
  database-dialect: POSTGRES
  earliest-visible-messages:
    enabled: true
    look-back-period: 10
    table-name: earliestmessage.tw_tkms_earliest_visible_messages 
  shards-count: 2
  table-base-name: earliestmessage.outgoing_message
  monitoring:
    left-over-messages-check-start-delay: 1s
  shards:
    1:
      earliest-visible-messages:
        table-name: earliestmessage.tw_tkms_earliest_visible_messages
        
tw-tkms-test:
  test-topic: TestTopicEarliestMessage