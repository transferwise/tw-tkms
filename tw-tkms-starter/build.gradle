plugins {
    id 'java-library'
    id 'idea'
    id "com.google.protobuf"
    id "docker-compose"
}

ext.projectName = "tw-tkms-starter"
ext.projectDescription = "tw-tkms-starter"
ext.projectArtifactName = "tw-tkms-starter"

apply from: "$rootProject.rootDir/build.common.gradle"
apply from: "$rootProject.rootDir/build.library.gradle"

dependencies {
    annotationProcessor libraries.springBootConfigurationProcessor

    compileOnly libraries.springBootConfigurationProcessor
    compileOnly libraries.javaxValidationApi
    compileOnly libraries.jakartaValidationApi
    
    implementation libraries.commonsLang3
    implementation libraries.curatorRecipes
    implementation libraries.guava
    implementation libraries.jacksonDatabind
    implementation libraries.kafkaClients
    implementation libraries.micrometerCore
    implementation libraries.protobufJava
    implementation libraries.springBootStarter
    implementation libraries.springJdbc
    implementation libraries.twBaseUtils
    implementation libraries.twContext
    implementation libraries.twGracefulShutdownInterfaces
    implementation libraries.twLeaderSelector
    implementation libraries.commonsIo
    implementation libraries.semver4j
    implementation libraries.lz4Java
    implementation libraries.snappyJava
    implementation libraries.zstdJni
    
    runtimeOnly libraries.twContextStarter
    runtimeOnly libraries.twGracefulShutdown
    runtimeOnly libraries.twLeaderSelectorStarter
    runtimeOnly libraries.micrometerRegistryPrometheus
    runtimeOnly libraries.springBootStarterValidation

    testCompileOnly libraries.spotbugsAnnotations

    testImplementation project(":tw-tkms-test-starter")

    testImplementation libraries.awaitility
    if (!springBootVersion.startsWith("2.6")) {
        testImplementation libraries.flywayMysql
    }
    testImplementation libraries.flywayCore
    testImplementation libraries.lombok
    testImplementation libraries.springBootStarterActuator
    testImplementation libraries.springBootStarterJdbc
    testImplementation libraries.springBootStarterTest
    testImplementation libraries.springBootStarterWeb
    testImplementation libraries.springKafka

    testRuntimeOnly libraries.mariadbJavaClient
    testRuntimeOnly libraries.postgresql
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
}

if (System.getenv("IN_CI") != "true") {
    dockerCompose.isRequiredBy(test)
}

dockerCompose {
    useComposeFiles = ["src/test/resources/docker-compose.yml"]
    projectName = "tw-tkms-starter"
    // May create some flakiness on slower comps
    waitForTcpPorts = false

    // Set to true if you have anomalies
    stopContainers = false

    removeContainers = true
    removeVolumes = true
}

test {
    doFirst {
        dockerCompose.exposeAsEnvironment(test)
    }
}
