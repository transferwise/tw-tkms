server:
  port: 8180

spring:
  application:
    name: tw-tkms-demoapp
  datasource:
    url: "jdbc:mariadb://localhost:13306/tkms"
    password: "example-password-change-me"
    username: "root"
    hikari:
      validation-timeout: 5000
      maximum-pool-size: 50
      minimum-idle: 10
      transaction-isolation: 2
      data-source-properties:
        useServerPrepStmts: true
        useCompression: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
      enable-auto-commit: false
      auto-offset-reset: earliest
  flyway:
    locations: "classpath:db/migration/mysql"
tw-tkms:
  polling-interval: 5ms
  shards-count: 1
  partitions-count: 1
  topics:
    - ComplexTest
  kafka:
    bootstrap.servers: "localhost:9092"
  environment:
    previous-version-at-least: 0.7.3
  earliest-visible-messages:
    enabled: false
    look-back-period: 10s

tw-graceful-shutdown:
  clients-reaction-time-ms: 10000
  strategies-check-interval-time-ms: 1000

management:
  metrics:
    distribution:
      percentiles-histogram:
        all: false
        http.server.requests: true
        http.client.requests: true
      percentiles:
        all: 0.5, 0.9, 0.95, 0.99
  endpoints.web.exposure.include:
    - health
    - liveness
    - prometheus
    - info

tw-curator:
  zookeeper-connect-string: "localhost:2181"

logging.level.org.apache.kafka.clients.producer.ProducerConfig: WARN
logging.level.org.apache.kafka.clients.admin.AdminClientConfig: WARN
logging.level.org.apache.kafka.clients.consumer.ConsumerConfig: WARN

---

spring:
  profiles: postgres
  datasource:
    url: "jdbc:postgresql://localhost:15432/postgres"
    username: "postgres"
  flyway:
    locations: "classpath:db/migration/postgres"

tw-tkms:
  database-dialect: POSTGRES

---
spring:
  profiles: node2

server:
  port: 8181
